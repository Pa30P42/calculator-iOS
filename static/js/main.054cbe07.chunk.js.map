{"version":3,"sources":["Components/Calculator/CalculatorStyled.js","Components/Calculator/Display/DisplayStyled.js","Components/Calculator/Display/Display.js","Components/Calculator/Buttons/ButtonStyled.js","Components/Calculator/Buttons/Button.js","Components/Calculator/Pad/PadStyled.js","Components/Calculator/Pad/Pad.js","Components/Calculator/Calculator.js","Components/Calculator/hooks/useCalc.js","App.js","index.js"],"names":["Wrapper","styled","div","UpperResult","Expression","span","Value","Display","value","hasMemory","expression","StyledButton","props","color","ZeroButton","Button","children","onClick","Row","Pad","onDigitButtonClick","onPointButtonClick","onOperatorButtonClick","onChangeSignButtonClick","onEqualButtonClick","onAllClearButtonClick","onClearEntryButtonClick","onMemoryRecallButtonClick","onMemoryClearButtonClick","onMemoryPlusButtonClick","onMemoryMinusButtonClick","onPercentButtonClick","handleKeyDown","keyCode","shiftKey","useEffect","document","body","addEventListener","removeEventListener","Calculator","useState","memory","setMemory","result","setResult","expectsDigit","setExpectsDigit","chosenOperation","setChosenOperation","display","setDisplay","calculate","rightOperand","newResult","toString","slice","padBtnHandler","digit","newDisplay","length","indexOf","operator","operand","includes","arr","split","Number","undefined","calcInfo","useCalc","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.054cbe07.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 220px;\r\n  margin-top: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #000;\r\n  border-radius: 12px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UpperResult = styled.div`\r\n  font-size: 0.75em;\r\n  line-height: 1;\r\n  opacity: 0.4;\r\n  text-align: right;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.25em;\r\n  min-height: 1em;\r\n`;\r\n\r\nexport const Expression = styled.span`\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Value = styled.div`\r\n  font-size: 2.5em;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  color: #fff;\r\n  padding: 1.2em 1em;\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, Expression, UpperResult, Value } from \"./DisplayStyled\";\r\n\r\nconst Display = ({ value, hasMemory, expression }) => {\r\n  return (\r\n    <Wrapper>\r\n      <UpperResult>\r\n        {hasMemory && <span>M</span>}\r\n\r\n        <Expression>{expression}</Expression>\r\n      </UpperResult>\r\n\r\n      <Value>{value}</Value>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.div`\r\n  font-family: inherit;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  border-radius: 50%;\r\n  width: 44px;\r\n  height: 44px;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  background-color: ${(props) => {\r\n    // if (props.color) {\r\n    //   console.log(\"props.olor\", props.color);\r\n    // }\r\n    return props.color ? props.color : \"#333333\";\r\n  }};\r\n  line-height: 44px;\r\n  cursor: pointer;\r\n  :last-child {\r\n    margin-right: 0px;\r\n    background-color: #ff9500;\r\n    color: #ffffff;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const ZeroButton = styled.div`\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  border-radius: 18px;\r\n  width: 80px;\r\n  height: 44px;\r\n  background-color: #333333;\r\n  line-height: 44px;\r\n  color: #ffffff;\r\n  text-align: left;\r\n  padding-left: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledButton } from \"./ButtonStyled\";\r\n\r\nconst Button = ({ children, color, onClick }) => {\r\n  return (\r\n    <StyledButton color={color} onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  background-color: black;\r\n  font-size: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 220px;\r\n  border-radius: 16px;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"../Buttons/Button\";\r\nimport { ZeroButton } from \"../Buttons/ButtonStyled\";\r\nimport { Wrapper, Row } from \"./PadStyled\";\r\n\r\nconst Pad = ({\r\n  onDigitButtonClick,\r\n  onPointButtonClick,\r\n  onOperatorButtonClick,\r\n  onChangeSignButtonClick,\r\n  onEqualButtonClick,\r\n  onAllClearButtonClick,\r\n  onClearEntryButtonClick,\r\n  onMemoryRecallButtonClick,\r\n  onMemoryClearButtonClick,\r\n  onMemoryPlusButtonClick,\r\n  onMemoryMinusButtonClick,\r\n  onPercentButtonClick,\r\n}) => {\r\n  const handleKeyDown = ({ keyCode, shiftKey }) => {\r\n    if (keyCode >= 48 && keyCode <= 57 && !shiftKey) {\r\n      onDigitButtonClick(keyCode - 48);\r\n    } else if (keyCode >= 96 && keyCode <= 105) {\r\n      onDigitButtonClick(keyCode - 96);\r\n    } else if (keyCode === 107 || (keyCode === 187 && shiftKey)) {\r\n      onOperatorButtonClick(\"+\");\r\n    } else if (keyCode === 109 || keyCode === 189) {\r\n      onOperatorButtonClick(\"-\");\r\n    } else if (keyCode === 106 || (keyCode === 56 && shiftKey)) {\r\n      onOperatorButtonClick(\"×\");\r\n    } else if (keyCode === 111 || keyCode === 191) {\r\n      onOperatorButtonClick(\"÷\");\r\n    } else if (keyCode === 13 || (keyCode === 187 && !shiftKey)) {\r\n      onEqualButtonClick();\r\n    } else if (keyCode === 46) {\r\n      onClearEntryButtonClick();\r\n    } else if (keyCode === 27) {\r\n      onAllClearButtonClick();\r\n    } else if (keyCode === 78) {\r\n      onChangeSignButtonClick();\r\n    } else if (keyCode === 80) {\r\n      onMemoryPlusButtonClick();\r\n    } else if (keyCode === 81) {\r\n      onMemoryMinusButtonClick();\r\n    } else if (keyCode === 82) {\r\n      onMemoryRecallButtonClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => document.body.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Row>\r\n        <Button color=\"#aaa\" onClick={onAllClearButtonClick}>\r\n          AC\r\n        </Button>\r\n        <Button color=\"#aaa\" onClick={onChangeSignButtonClick}>\r\n          -/+\r\n        </Button>\r\n        <Button color=\"#aaa\" onClick={onPercentButtonClick}>\r\n          %\r\n        </Button>\r\n        <Button onClick={() => onOperatorButtonClick(\"+\")}>+</Button>\r\n      </Row>\r\n      <Row>\r\n        <Button onClick={onMemoryRecallButtonClick}>MR</Button>\r\n        <Button onClick={onMemoryClearButtonClick}>MC</Button>\r\n        <Button onClick={onMemoryMinusButtonClick}>M-</Button>\r\n        <Button onClick={onMemoryPlusButtonClick}>M+</Button>\r\n      </Row>\r\n      <Row>\r\n        <Button onClick={() => onDigitButtonClick(7)}>7</Button>\r\n        <Button onClick={() => onDigitButtonClick(8)}>8</Button>\r\n        <Button onClick={() => onDigitButtonClick(9)}>9</Button>\r\n        <Button onClick={() => onOperatorButtonClick(\"×\")}>×</Button>\r\n      </Row>\r\n      <Row>\r\n        <Button onClick={() => onDigitButtonClick(4)}>4</Button>\r\n        <Button onClick={() => onDigitButtonClick(5)}>5</Button>\r\n        <Button onClick={() => onDigitButtonClick(6)}>6</Button>\r\n        <Button onClick={() => onOperatorButtonClick(\"÷\")}>÷</Button>\r\n      </Row>\r\n      <Row>\r\n        <Button onClick={() => onDigitButtonClick(1)}>1</Button>\r\n        <Button onClick={() => onDigitButtonClick(2)}>2</Button>\r\n        <Button onClick={() => onDigitButtonClick(3)}>3</Button>\r\n        <Button onClick={() => onOperatorButtonClick(\"-\")}>-</Button>\r\n      </Row>\r\n      <Row>\r\n        <ZeroButton onClick={() => onDigitButtonClick(0)}>0</ZeroButton>\r\n        <Button onClick={onPointButtonClick}>.</Button>\r\n        <Button onClick={onEqualButtonClick}>=</Button>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Pad;\r\n","import { Wrapper } from \"./CalculatorStyled\";\r\nimport { useCalc } from \"./hooks/useCalc\";\r\nimport Display from \"./Display/Display\";\r\nimport Pad from \"./Pad/Pad\";\r\n\r\nexport const Calculator = () => {\r\n  const { padBtnHandler, calcInfo } = useCalc();\r\n\r\n  const {\r\n    onDigitButtonClick,\r\n    onPointButtonClick,\r\n    onPercentButtonClick,\r\n    onOperatorButtonClick,\r\n    onChangeSignButtonClick,\r\n    onEqualButtonClick,\r\n    onAllClearButtonClick,\r\n    onClearEntryButtonClick,\r\n    onMemoryRecallButtonClick,\r\n    onMemoryClearButtonClick,\r\n    onMemoryPlusButtonClick,\r\n    onMemoryMinusButtonClick,\r\n  } = padBtnHandler;\r\n\r\n  const { memory, result, expectsDigit, chosenOperation, display } = calcInfo;\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Display\r\n          value={display}\r\n          hasMemory={memory !== 0}\r\n          expression={\r\n            typeof chosenOperation !== \"undefined\"\r\n              ? `${result}${chosenOperation}${expectsDigit ? \"\" : display}`\r\n              : \"\"\r\n          }\r\n        />\r\n        <Pad\r\n          onDigitButtonClick={onDigitButtonClick}\r\n          onPointButtonClick={onPointButtonClick}\r\n          onOperatorButtonClick={onOperatorButtonClick}\r\n          onChangeSignButtonClick={onChangeSignButtonClick}\r\n          onEqualButtonClick={onEqualButtonClick}\r\n          onAllClearButtonClick={onAllClearButtonClick}\r\n          onClearEntryButtonClick={onClearEntryButtonClick}\r\n          onMemoryRecallButtonClick={onMemoryRecallButtonClick}\r\n          onMemoryClearButtonClick={onMemoryClearButtonClick}\r\n          onMemoryPlusButtonClick={onMemoryPlusButtonClick}\r\n          onMemoryMinusButtonClick={onMemoryMinusButtonClick}\r\n          onPercentButtonClick={onPercentButtonClick}\r\n        />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useCalc = () => {\r\n  const [memory, setMemory] = useState(0);\r\n  const [result, setResult] = useState(0);\r\n  const [expectsDigit, setExpectsDigit] = useState(true);\r\n  const [chosenOperation, setChosenOperation] = useState();\r\n  const [display, setDisplay] = useState(\"0\");\r\n\r\n  const calculate = (rightOperand, chosenOperation) => {\r\n    let newResult = result;\r\n\r\n    switch (chosenOperation) {\r\n      case \"+\":\r\n        newResult += rightOperand;\r\n        break;\r\n      case \"-\":\r\n        newResult -= rightOperand;\r\n        break;\r\n      case \"×\":\r\n        newResult *= rightOperand;\r\n        break;\r\n      case \"÷\":\r\n        if (rightOperand === 0) {\r\n          return false;\r\n        }\r\n\r\n        newResult /= rightOperand;\r\n        break;\r\n\r\n      default:\r\n    }\r\n\r\n    setResult(newResult);\r\n    setDisplay(newResult.toString().toString().slice(0, 12));\r\n    return true;\r\n  };\r\n\r\n  // Pad buttons handlers\r\n  const onDigitButtonClick = (digit) => {\r\n    let newDisplay = display;\r\n\r\n    if ((display === \"0\" && digit === 0) || display.length > 12) {\r\n      return;\r\n    }\r\n\r\n    if (expectsDigit) {\r\n      newDisplay = \"\";\r\n      setExpectsDigit(false);\r\n    }\r\n\r\n    if (display !== \"0\") {\r\n      newDisplay = newDisplay + digit.toString();\r\n    } else {\r\n      newDisplay = digit.toString();\r\n    }\r\n\r\n    setDisplay(newDisplay);\r\n  };\r\n\r\n  const onPointButtonClick = () => {\r\n    let newDisplay = display;\r\n\r\n    if (expectsDigit) {\r\n      newDisplay = \"0\";\r\n    }\r\n\r\n    if (newDisplay.indexOf(\".\") === -1) {\r\n      newDisplay = newDisplay + \".\";\r\n    }\r\n\r\n    setDisplay(newDisplay);\r\n    setExpectsDigit(false);\r\n  };\r\n  const onPercentButtonClick = () => {\r\n    let newDisplay = display;\r\n\r\n    if (newDisplay === \"0\" || newDisplay === \"0.\") {\r\n      return;\r\n    }\r\n\r\n    if (newDisplay.indexOf(\"%\") === -1) {\r\n      newDisplay = newDisplay + \"%\";\r\n    }\r\n\r\n    setDisplay(newDisplay);\r\n    setExpectsDigit(false);\r\n  };\r\n\r\n  const onOperatorButtonClick = (operator) => {\r\n    let operand;\r\n\r\n    if (display.includes(\"%\")) {\r\n      if (chosenOperation === \"-\" || chosenOperation === \"+\") {\r\n        const arr = display.split(\"%\");\r\n        operand = Number(result * (arr[0] / 100));\r\n      }\r\n      if (chosenOperation === \"×\" || chosenOperation === \"÷\") {\r\n        const arr = display.split(\"%\");\r\n        operand = Number(arr[0] / 100);\r\n      }\r\n    } else {\r\n      operand = Number(display);\r\n    }\r\n\r\n    if (typeof chosenOperation !== \"undefined\" && !expectsDigit) {\r\n      if (!calculate(operand, chosenOperation)) {\r\n        return;\r\n      }\r\n    } else {\r\n      setResult(operand);\r\n    }\r\n\r\n    setChosenOperation(operator);\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  const onChangeSignButtonClick = () => {\r\n    const value = Number(display);\r\n\r\n    if (value > 0) {\r\n      setDisplay(\"-\" + display);\r\n    } else if (value < 0) {\r\n      setDisplay(display.slice(1));\r\n    }\r\n  };\r\n\r\n  const onEqualButtonClick = () => {\r\n    let operand;\r\n\r\n    if (display.includes(\"%\")) {\r\n      if (chosenOperation === \"-\" || chosenOperation === \"+\") {\r\n        const arr = display.split(\"%\");\r\n        operand = Number(result * (arr[0] / 100));\r\n      }\r\n      if (chosenOperation === \"×\" || chosenOperation === \"÷\") {\r\n        const arr = display.split(\"%\");\r\n        operand = Number(arr[0] / 100);\r\n      }\r\n    } else {\r\n      operand = Number(display);\r\n    }\r\n\r\n    if (typeof chosenOperation !== \"undefined\" && !expectsDigit) {\r\n      if (!calculate(operand, chosenOperation)) {\r\n        return;\r\n      }\r\n      setChosenOperation(undefined);\r\n    } else {\r\n      setDisplay(operand.toString());\r\n    }\r\n    setResult(operand);\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  const onAllClearButtonClick = () => {\r\n    setMemory(0);\r\n    setResult(0);\r\n    setChosenOperation(undefined);\r\n    setDisplay(\"0\");\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  const onClearEntryButtonClick = () => {\r\n    setDisplay(\"0\");\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  const onMemoryRecallButtonClick = () => {\r\n    setDisplay(memory.toString());\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  const onMemoryClearButtonClick = () => {\r\n    setMemory(0);\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  const onMemoryPlusButtonClick = () => {\r\n    setMemory(memory + Number(display));\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  const onMemoryMinusButtonClick = () => {\r\n    setMemory(memory - Number(display));\r\n    setExpectsDigit(true);\r\n  };\r\n\r\n  return {\r\n    padBtnHandler: {\r\n      onDigitButtonClick,\r\n      onPointButtonClick,\r\n      onPercentButtonClick,\r\n      onOperatorButtonClick,\r\n      onChangeSignButtonClick,\r\n      onEqualButtonClick,\r\n      onAllClearButtonClick,\r\n      onClearEntryButtonClick,\r\n      onMemoryRecallButtonClick,\r\n      onMemoryClearButtonClick,\r\n      onMemoryPlusButtonClick,\r\n      onMemoryMinusButtonClick,\r\n    },\r\n    calcInfo: {\r\n      memory,\r\n      result,\r\n      expectsDigit,\r\n      chosenOperation,\r\n      display,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\nimport { Calculator } from \"./Components/Calculator/Calculator\";\n\nfunction App() {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}